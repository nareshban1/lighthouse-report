name: Mobile and Desktop Lighthouse CI

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
  pull_request:
    branches:
      - develop
      - main
    types: [opened, synchronize]

jobs:
  build-deploy-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: pnpm/action-setup@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Installing Dependencies
        run: pnpm install

      - name: Build Web Project
        run: pnpm run build

      - name: Install Lighthouse CI
        run: |
          cd apps/web
          pnpm install -g @lhci/cli

      - name: Lighthouse on Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6

        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          LHCI_TOKEN: ${{ secrets.LHCI_TOKEN }}
          LHCI_SERVER_BASE_URL: ${{ secrets.LHCI_SERVER_BASE_URL }}
        with:
          script: |
            process.chdir('/apps/web');

            const lighthouseConfig = require('./lighthouserc');

            // Healthcheck
            await exec.exec('lhci', ['healthcheck', '--fatal']);

            // Desktop
            for await (const url of lighthouseConfig.ci.collect.url) {
                await exec.exec('lhci', ['collect', '--additive', '--url', url, '--psiStrategy', 'desktop', '--settings.preset', 'desktop','--upload.target', 'temporary-public-storage']);
            };

            await exec.exec('lhci', ['assert']);
            await exec.exec('lhci', ['upload', '--githubStatusContextSuffix', '/desktop']);

            // Cleanup
            await exec.exec('rm', ['-fr', '.lighthouseci']);

            // Mobile
            for await (const url of lighthouseConfig.ci.collect.url) {
                await exec.exec('lhci', ['collect', '--additive', '--url', url, '--psiStrategy', 'mobile','--upload.target', 'temporary-public-storage']);
            };

            await exec.exec('lhci', ['assert']);
            await exec.exec('lhci', ['upload', '--githubStatusContextSuffix', '/mobile']);

      - name: Lighthouse on Merge/Deploy
        if: github.event_name == 'push'
        run: |
          pnpm test:lighthouse:mobile -- --upload.target=lhci
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          LHCI_TOKEN: ${{ secrets.LHCI_TOKEN }}
          LHCI_SERVER_BASE_URL: ${{ secrets.LHCI_SERVER_BASE_URL }}
